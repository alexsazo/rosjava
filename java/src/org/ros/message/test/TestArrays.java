/* Auto-generated by genmsg_java.py for file /Users/kwc/workspace/ros_comm/test/test_ros/msg/TestArrays.msg */

package org.ros.message.test;

import org.ros.message.Message;

import org.ros.message.Time;

import java.nio.ByteBuffer;

public class TestArrays extends Message {

  public java.lang.String caller_id = new java.lang.String();
  public java.lang.String orig_caller_id = new java.lang.String();
  public int[] int32_array = new int[0];
  public float[] float32_array = new float[0];
  public java.util.ArrayList<Time> time_array = new java.util.ArrayList<Time>();
  public java.util.ArrayList<TestString> test_string_array = new java.util.ArrayList<TestString>();

  public TestArrays() {
  }

  public static java.lang.String __s_getDataType() { return "test_ros/TestArrays"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "4cc9b5e2cebe791aa3e994f5bc159eb6"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "# caller_id of most recent node to send this message\n" +
"string caller_id\n" +
"# caller_id of the original node to send this message\n" +
"string orig_caller_id\n" +
"\n" +
"int32[] int32_array\n" +
"float32[] float32_array\n" +
"time[] time_array\n" +
"TestString[] test_string_array\n" +
"# TODO: array of arrays\n" +
"\n" +
"================================================================================\n" +
"MSG: test_ros/TestString\n" +
"# Integration test message\n" +
"# caller_id of most recent node to send this message\n" +
"string caller_id\n" +
"# caller_id of the original node to send this message\n" +
"string orig_caller_id\n" +
"string data\n" +
"\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public TestArrays clone() {
    TestArrays c = new TestArrays();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 4 + caller_id.length();
    __l += 4 + orig_caller_id.length();
    __l += 4 + int32_array.length * 4; // int32_array
    __l += 4 + float32_array.length * 4; // float32_array
    __l += 4 + time_array.size() * 8; // time_array
    __l += 4;
    for(TestString val : test_string_array) {
      __l += val.serializationLength();
    }
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    Serialization.writeString(bb, caller_id);
    Serialization.writeString(bb, orig_caller_id);
    bb.putInt(int32_array.length);
    for(int val : int32_array) {
      bb.putInt(val);
    }
    bb.putInt(float32_array.length);
    for(float val : float32_array) {
      bb.putFloat(val);
    }
    bb.putInt(time_array.size());
    for(Time val : time_array) {
      Serialization.writeTime(bb, val);
    }
    bb.putInt(test_string_array.size());
    for(TestString val : test_string_array) {
      val.serialize(bb, seq);
    }
  }

  public void deserialize(ByteBuffer bb) {
    caller_id = Serialization.readString(bb);
    orig_caller_id = Serialization.readString(bb);

    int __int32_array_len = bb.getInt();
    int32_array = new int[__int32_array_len];
    for(int __i=0; __i<__int32_array_len; __i++) {
      int32_array[__i] = bb.getInt();
    }

    int __float32_array_len = bb.getInt();
    float32_array = new float[__float32_array_len];
    for(int __i=0; __i<__float32_array_len; __i++) {
      float32_array[__i] = bb.getFloat();
    }

    int __time_array_len = bb.getInt();
    time_array = new java.util.ArrayList<Time>(__time_array_len);
    for(int __i=0; __i<__time_array_len; __i++) {
      time_array.add(Serialization.readTime(bb));
    }

    int __test_string_array_len = bb.getInt();
    test_string_array = new java.util.ArrayList<TestString>(__test_string_array_len);
    for(int __i=0; __i<__test_string_array_len; __i++) {
      TestString __tmp = new TestString();
      __tmp.deserialize(bb);
      test_string_array.add(__tmp);;
    }
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof TestArrays))
      return false;
    TestArrays other = (TestArrays) o;
    return
      caller_id.equals(other.caller_id) &&
      orig_caller_id.equals(other.orig_caller_id) &&
      java.util.Arrays.equals(int32_array, other.int32_array) &&
      java.util.Arrays.equals(float32_array, other.float32_array) &&
      time_array.equals(other.time_array) &&
      test_string_array.equals(other.test_string_array) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.caller_id == null ? 0 : this.caller_id.hashCode());
    result = prime * result + (this.orig_caller_id == null ? 0 : this.orig_caller_id.hashCode());
    result = prime * result + java.util.Arrays.hashCode(this.int32_array);
    result = prime * result + java.util.Arrays.hashCode(this.float32_array);
    result = prime * result + (this.time_array == null ? 0 : this.time_array.hashCode());
    result = prime * result + (this.test_string_array == null ? 0 : this.test_string_array.hashCode());
    return result;
  }
} // class TestArrays

